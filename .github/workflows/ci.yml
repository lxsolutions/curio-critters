name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install frontend dependencies
        run: cd src/frontend && npm ci

      - name: Run frontend tests
        run: cd src/frontend && npm test

      - name: Install backend dependencies
        run: cd src/backend && npm ci

      - name: Run backend tests
        run: cd src/backend && npm test -- --watchAll=false

  build:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install frontend dependencies
        run: cd src/frontend && npm ci

      - name: Build frontend
        run: cd src/frontend && npm run build

      - name: Install backend dependencies
        run: cd src/backend && npm ci

      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: src/frontend/dist

  # Uncomment and configure if Vercel/Netlify tokens are available
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Download frontend build artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: frontend-build
  #         path: src/frontend/dist
  #     - name: Deploy to Vercel
  #       run: npx vercel --prod --token \$VERCEL_TOKEN
